{
  "test": {
    "flags": [
      {
        "args": [
          "--bbs"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "bbs",
          "help": "test BBS sequence"
        }
      },
      {
        "args": [
          "--bbs-cipher"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "bbs_cipher",
          "help": "test BBS sequence ciphered message random properties"
        }
      },
      {
        "args": [
          "-f",
          "--file"
        ],
        "kwargs": {
          "type": "str",
          "dest": "file_path",
          "help": "provide a file path to the test"
        }
      }
    ],
    "help": "test the given byte sequence"
  },
  "generate-blum-int": {
    "flags": [
      {
        "args": [
          "-p"
        ],
        "kwargs": {
          "type": "int",
          "required": true,
          "dest": "p_len",
          "help": "p prime length"
        }
      },
      {
        "args": [
          "-q"
        ],
        "kwargs": {
          "type": "int",
          "required": true,
          "dest": "q_len",
          "help": "q prime length"
        }
      }
    ],
    "help": "generate new Blum Integer and write result to numbers/blum.int"
  },
  "modes": {
    "flags": [
      {
        "args": [
          "--cbc"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "cbc",
          "help": "run in CBC mode"
        }
      },
      {
        "args": [
          "--ctr"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "ctr",
          "help": "run in CTR mode"
        }
      },
      {
        "args": [
          "-b",
          "--boo-boo"
        ],
        "kwargs": {
          "type": "str",
          "dest": "boo_boo",
          "default": "none",
          "choices": [
            "none",
            "rm-random-block",
            "clone-random-block",
            "swap-random-blocks",
            "swap-random-bytes-in-random-block",
            "modify-random-byte-in-random-block",
            "rm-random-byte-from-random-block"
          ],
          "help": "mess with the encrypted message, and see what happens!"
        }
      },
      {
        "args": [
          "-f",
          "--file"
        ],
        "kwargs": {
          "type": "str",
          "dest": "file_path",
          "help": "provide a file to encrypt"
        }
      }
    ],
    "help": "run self-made implementations of block cipher modes"
  },
  "bbs": {
    "flags": [
      {
        "args": [
          "-g",
          "--generate"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "generate",
          "help": "generate BBS sequence"
        }
      },
      {
        "args": [
          "-l",
          "--seq-len"
        ],
        "kwargs": {
          "type": "int",
          "default": 20000,
          "dest": "seq_len",
          "help": "sequence length used in BBS"
        }
      },
      {
        "args": [
          "-c",
          "--cipher"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "cipher",
          "help": "cipher the input message using BBS generator"
        }
      },
      {
        "args": [
          "-f",
          "--file"
        ],
        "kwargs": {
          "type": "str",
          "dest": "file_path",
          "help": "provide a file path to the BBS sequence"
        }
      }
    ],
    "help": "run BBS generation algorithm"
  },
  "bench": {
    "flags": [
      {
        "args": [
          "--block-cipher"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "block_cipher",
          "help": "test block ciphers encryption/decryption speed"
        }
      },
      {
        "args": [
          "-f",
          "--files"
        ],
        "kwargs": {
          "type": "str",
          "dest": "file_paths",
          "help": "provide a csv list of file paths to the test"
        }
      },
      {
        "args": [
          "-d",
          "--dir"
        ],
        "kwargs": {
          "type": "str",
          "dest": "dir_path",
          "help": "provide directory path with files for the test"
        }
      },
      {
        "args": [
          "-o",
          "--out"
        ],
        "kwargs": {
          "type": "str",
          "dest": "output",
          "default": "df",
          "choices": [
            "json",
            "excel",
            "df",
            "csv"
          ],
          "help": "provide the output type of the benchmark"
        }
      }
    ],
    "help": "run benchmark tests"
  },
  "rsa": {
    "flags": [
      {
        "args": [
          "--simple"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "simple",
          "help": "run the simple version"
        }
      },
      {
        "args": [
          "-e",
          "--encrypt"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "encrypt",
          "help": "encrypt and decrypt a chosen message [pub enc --> priv dec]"
        }
      },
      {
        "args": [
          "-s",
          "--sign"
        ],
        "kwargs": {
          "action": "store_true",
          "dest": "sign",
          "help": "sign and decrypt the message [priv enc --> pub dec]"
        }
      },
      {
        "args": [
          "--with-preset"
        ],
        "kwargs": {
          "type": "str",
          "dest": "preset_file",
          "help": "read preset from file"
        }
      },
      {
        "args": [
          "-f",
          "--file"
        ],
        "kwargs": {
          "type": "str",
          "dest": "file_path",
          "help": "provide a file path to run the algorithm on"
        }
      }
    ],
    "help": "run RSA asynchronous algorithm"
  }
}